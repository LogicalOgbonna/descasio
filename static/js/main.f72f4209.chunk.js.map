{"version":3,"sources":["components/DisplayResult/DisplayResult.js","components/Button/Button.js","components/ButtonRow/ButtonRow.js","helpers/brain.js","helpers/keyPressed.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayResult","input","answer","data-testid","className","Button","val","children","onClick","enter","last","click","isNaN","ButtonRow","brain","value","split","tempAns","i","length","parseFloat","keyPressed","key","setInput","setNotworkingOperand","setAnswer","includes","indexOf","substring","App","useState","notworkingOperand","useEffect","onKeyPress","document","addEventListener","removeEventListener","onclickOperator","onclickNumber","onPerformAction","notWorking","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f72f4209.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from 'react';\nimport './DisplayResult.css';\n\nconst DisplayResult = ({ input, answer }) => (\n    <div data-testid=\"display-result\" className=\"result-container\">\n        <span className=\"current-operation\">{input}</span>\n        <h1 className=\"answer\">{answer}</h1>\n    </div>\n)\n\nDisplayResult.propTypes = {\n  answer: PropTypes.number.isRequired,\n  input: PropTypes.string.isRequired\n}\n\nexport default DisplayResult\n","import PropTypes from \"prop-types\";\nimport React from 'react';\nimport './Button.css';\n\nconst Button = ({ children, onClick, enter, last }) => {\n    const isOperator = val => {\n        return isNaN(val);\n    };\n    const click = () => onClick(children)\n    if (enter) return <div className=\"w-100\"><button data-testid=\"enter-button\" onClick={click} className={`btn enter-button`}>{children}</button></div>\n    return <div className={last ? \"w-50\" : \"w-100\"}><button data-testid=\"button\" onClick={click} className={`btn ${isOperator(children) ? 'operator' : 'number'}`}>{children}</button></div>\n}\n\nButton.propTypes = {\n    children: PropTypes.string.isRequired,\n    enter: PropTypes.bool,\n    last: PropTypes.bool,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Button\n","import PropTypes from \"prop-types\";\nimport React from 'react';\nimport './ButtonRow.css';\n\nconst ButtonRow = ({ children }) => (\n    <div data-testid='button-row' className=\"d-flex buttons-container m-0\">\n        {children}\n    </div>\n)\n\nButtonRow.propTypes = {\n    children: PropTypes.node.isRequired\n}\n\nexport default ButtonRow\n","const brain = (input = '') => {\n    const value = input.split(\" \");\n    let tempAns = 0;\n    for (let i = 0; i < value.length; i++) {\n        if (value[i] === \"+\") {\n            if (tempAns) {\n                tempAns += value[i + 1] ? parseFloat(value[i + 1], 10) : 0;\n            } else {\n                tempAns += (parseFloat(value[i - 1], 10) + parseFloat(value[i + 1], 10));\n            }\n        }\n        if (value[i] === \"-\") {\n            if (tempAns) {\n                tempAns -= value[i + 1] ? parseFloat(value[i + 1], 10) : 0;\n            } else {\n                tempAns += ((value[i - 1] ? parseFloat(value[i - 1], 10) : 0) - (value[i + 1] ? parseFloat(value[i + 1], 10) : 0));\n            }\n        }\n        if (value[i] === \"*\") {\n            if (tempAns) {\n                tempAns *= value[i + 1] ? parseFloat(value[i + 1], 10) : 1;\n            } else {\n                tempAns += ((value[i - 1] ? parseFloat(value[i - 1], 10) : 1) * (value[i + 1] ? parseFloat(value[i + 1], 10) : 1));\n            }\n        }\n        if (value[i] === \"Ã·\" || value[i] === \"/\") {\n            if (tempAns) {\n                tempAns /= value[i + 1] ? parseFloat(value[i + 1], 10) : 1;\n            } else {\n                if (parseFloat(value[i + 1]) === 0) {\n                    tempAns = 0 // return zero(0) instead of infinity when divided by zero\n                    continue\n                }\n                tempAns += ((value[i - 1] ? parseFloat(value[i - 1], 10) : 1) / (value[i + 1] ? parseFloat(value[i + 1], 10) : 1));\n            }\n        }\n\n    }\n    return tempAns;\n}\n\nexport default brain;","const keyPressed = ({ key, input, setInput, brain, setNotworkingOperand, setAnswer }) => {\n    // console.log(\"ğŸš€ ~ file: keyPressed.js ~ line 18 ~ keyPressed ~ key\", key)\n    if ([\"+\", \"-\", \"*\", \"Ã·\", \"/\"].includes(key)) {\n        if (key === \"/\") return setInput(`${input} Ã· `)\n        setInput(`${input} ${key} `)\n    }\n    if (['Enter', '='].includes(key)) {\n        const tempAns = brain(input);\n        setNotworkingOperand(\"\")\n        setAnswer(tempAns);\n    }\n    if (key === \".\" && input.indexOf(\".\") === -1) setInput(input + key)\n    if (key === \"Backspace\") {\n        setInput(input.substring(0, input.length - 1));\n        if (input.length <= 1) setAnswer(0)\n    }\n    if (isNaN(key)) return;\n    setInput(input + key);\n}\n\nexport default keyPressed;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { ButtonRow, DisplayResult, Button } from './components';\nimport brain from './helpers/brain';\nimport keyPressed from './helpers/keyPressed';\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [answer, setAnswer] = useState(0);\n  const [notworkingOperand, setNotworkingOperand] = useState('');\n\n  useEffect(() => {\n\n    const onKeyPress = ({ key }) => {\n      keyPressed({ key, input, setInput, brain, setNotworkingOperand, setAnswer })\n    }\n\n    document.addEventListener('keydown', onKeyPress)\n    return () => {\n      document.removeEventListener('keydown', onKeyPress)\n    }\n  }, [input]);\n\n  const onclickOperator = (val) => {\n    if (!input.length && [\"+\", \"*\", \"Ã·\"].includes(val)) return // only allowing case like -1 and not +1 or *1 or /1 to start\n    if (input[input.length - 2] === val) return // not allowing a case like ++ or --\n    if ([\"+\", \"-\", \"*\", \"Ã·\"].includes(input[input.length - 2])) return // not allowing as case like +- or *+\n    setInput(input + \" \" + val + \" \")\n  }\n  const onclickNumber = (val) => {\n    setInput(input + val)\n  }\n\n  const onclickPoint = (val) => {\n    if (input.indexOf(\".\") !== -1) return // not allowing double . in a number\n    setInput(input + val)\n  }\n\n\n  const onPerformAction = (value) => {\n    switch (value) {\n      case \"ans\":\n      case \"ENTER\": {\n        if (!input.length) return\n        const tempAns = brain(input)\n        setAnswer(tempAns)\n        setNotworkingOperand(\"\")\n        return;\n      }\n      case \"del\": {\n        setInput(input.substring(0, input.length - 1));\n        if (input.length <= 1) setAnswer(0)\n        return;\n      }\n      case \"AC\": {\n        setInput(\"\");\n        setAnswer(0)\n        setNotworkingOperand(\"\")\n        return;\n      }\n      default:\n        break;\n    }\n  }\n\n  const notWorking = (value) => setNotworkingOperand(value)\n  return (\n    <div data-testid=\"calculator\" className=\"container app-width\">\n      <div className=\"row justify-content-center align-items-center\">\n        <div className=\"col-8 col-sm-8  col-lg-6 calc-container\">\n          <DisplayResult input={input} answer={answer} />\n          <ButtonRow>\n            <Button onClick={notWorking}>(</Button>\n            <Button onClick={notWorking}>)</Button>\n            <Button onClick={onPerformAction}>ans</Button>\n            <Button onClick={onPerformAction}>del</Button>\n            <Button onClick={onPerformAction}>AC</Button>\n          </ButtonRow>\n          <ButtonRow>\n            <Button onClick={onclickNumber}>7</Button>\n            <Button onClick={onclickNumber}>8</Button>\n            <Button onClick={onclickNumber}>9</Button>\n            <Button onClick={notWorking}>%</Button>\n            <Button onClick={notWorking}>&#8730;</Button>\n          </ButtonRow>\n          <ButtonRow>\n            <Button onClick={onclickNumber}>4</Button>\n            <Button onClick={onclickNumber}>5</Button>\n            <Button onClick={onclickNumber}>6</Button>\n            <Button onClick={onclickOperator}>*</Button>\n            <Button onClick={onclickOperator}>&#247;</Button>\n          </ButtonRow>\n          <ButtonRow>\n            <Button onClick={onclickNumber}>1</Button>\n            <Button onClick={onclickNumber}>2</Button>\n            <Button onClick={onclickNumber}>3</Button>\n            <Button onClick={onclickOperator}>+</Button>\n            <Button onClick={onclickOperator}>-</Button>\n          </ButtonRow>\n          <ButtonRow>\n            <Button last onClick={onclickPoint}>.</Button>\n            <Button last onClick={onclickNumber}>0</Button>\n            <Button last onClick={onclickOperator}>&#177;</Button>\n            <Button enter onClick={onPerformAction}>ENTER</Button>\n          </ButtonRow>\n          {notworkingOperand && <div className=\"not-working\">{notworkingOperand} is not working at the moment</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}